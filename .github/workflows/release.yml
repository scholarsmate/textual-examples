name: Build and Release Packages

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers on version tags like v1.0.0, v1.2.3, etc.

permissions:
  contents: write

jobs:
  build:
    name: Build Distribution Packages
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      
      - name: Install build tool
        run: |
          python -m pip install --upgrade pip
          pip install build
      
      - name: Build task-app package
        run: |
          python -m build -w -s packages/task-app

      - name: Build budget-app package
        run: |
          python -m build -w -s packages/budget-app

      - name: Move artifacts to top-level dist
        shell: bash
        run: |
          mkdir -p dist
          cp packages/task-app/dist/* dist/
          cp packages/budget-app/dist/* dist/
      
      - name: List built packages
        run: |
          echo "=== Built Packages ==="
          ls -lh dist/
      
      - name: Upload package artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-packages
          path: dist/*
          if-no-files-found: error
      
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*.whl
            dist/*.tar.gz
          generate_release_notes: true
          draft: false
          prerelease: false
          fail_on_unmatched_files: true
          make_latest: true

  # Optional: Publish to PyPI
  # Uncomment this job when you're ready to publish to PyPI
  # You'll need to add PYPI_API_TOKEN to your repository secrets
  
  # publish-to-pypi:
  #   name: Publish to PyPI
  #   needs: build
  #   runs-on: ubuntu-latest
  #   if: startsWith(github.ref, 'refs/tags/v')
  #   
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #     
  #     - name: Set up Python
  #       uses: actions/setup-python@v5
  #       with:
  #         python-version: '3.10'
  #     
  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install build twine
  #     
  #     - name: Build packages
  #       run: |
  #         cd task-app-package && python -m build && cd ..
  #         cd budget-app-package && python -m build && cd ..
  #     
  #     - name: Publish Task App to PyPI
  #       env:
  #         TWINE_USERNAME: __token__
  #         TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
  #       run: |
  #         python -m twine upload task-app-package/dist/*
  #     
  #     - name: Publish Budget App to PyPI
  #       env:
  #         TWINE_USERNAME: __token__
  #         TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
  #       run: |
  #         python -m twine upload budget-app-package/dist/*
